services:
  esourcing.apigateway:
    build:
      context: C:\Users\merturk\source\repos\E-SourcingMicroService
      dockerfile: ESourcing.APIGateway/Dockerfile
    container_name: esourcingapigateway
    depends_on:
      esourcing.order:
        condition: service_started
      esourcing.products:
        condition: service_started
      esourcing.sourcing:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: esourcingapigateway
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5000
      protocol: tcp
    volumes:
    - type: bind
      source: /ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /.microsoft/usersecrets/
      target: /root/.microsoft/usersecrets
      bind:
        create_host_path: true
  esourcing.order:
    build:
      context: C:\Users\merturk\source\repos\E-SourcingMicroService
      dockerfile: ESourcing.Order/Dockerfile
    container_name: esourcingorder
    depends_on:
      rabbitmq:
        condition: service_started
      sourcingsqldb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings:OrderConnection: Server=sourcingsqldb;Database=OrderDb;User
        Id=sa;Password=Odb12345678
      EventBus:HostName: rabbitmq
    image: esourcingorder
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 8002
      protocol: tcp
    volumes:
    - type: bind
      source: /ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /.microsoft/usersecrets/
      target: /root/.microsoft/usersecrets
      bind:
        create_host_path: true
  esourcing.products:
    build:
      context: C:\Users\merturk\source\repos\E-SourcingMicroService
      dockerfile: ESourcing.Products/Dockerfile
    container_name: esourcingproducts
    depends_on:
      sourcingdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ProductDatabaseSettings:ConnectionString: mongodb://sourcingdb:27017
    image: esourcingproducts
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 8000
      protocol: tcp
    volumes:
    - type: bind
      source: /ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /.microsoft/usersecrets/
      target: /root/.microsoft/usersecrets
      bind:
        create_host_path: true
  esourcing.sourcing:
    build:
      context: C:\Users\merturk\source\repos\E-SourcingMicroService
      dockerfile: Esourcing.Sourcing/Dockerfile
    container_name: esourcingsourcing
    depends_on:
      rabbitmq:
        condition: service_started
      sourcingdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      EventBus:HostName: rabbitmq
      SourcingDatabaseSettings:ConnectionString: mongodb://sourcingdb:27017
    image: esourcingsourcing
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 8001
      protocol: tcp
    volumes:
    - type: bind
      source: /ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: /.microsoft/usersecrets/
      target: /root/.microsoft/usersecrets
      bind:
        create_host_path: true
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5672
      published: 5672
      protocol: tcp
    - mode: ingress
      target: 15672
      published: 15672
      protocol: tcp
    restart: always
  sourcingdb:
    container_name: sourcingdb
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: 27017
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: /site
      target: /data/db
      bind:
        create_host_path: true
  sourcingsqldb:
    container_name: sourcingsqldb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Odb12345678
    image: mcr.microsoft.com/mssql/server
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: 1433
      protocol: tcp
networks:
  default:
    name: dockercompose6187267382491459457_default